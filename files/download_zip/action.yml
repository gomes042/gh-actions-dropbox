# https://www.dropbox.com/developers/documentation/http/documentation#files-download_zip
name: Download .zip
description: Download a folder from Dropbox, as a zip file

inputs:
  DROPBOX_APP_KEY:
    description: Dropbox app key
    required: true
  DROPBOX_APP_SECRET:
    description: Dropbox app secret
    required: true
  DROPBOX_REFRESH_TOKEN:
    description: Dropbox refresh token
    required: true
  SOURCE_PATH:
    description: Path to folder to download
    required: true
  DEST_PATH:
    description: Destination path
    required: true

runs:
  using: "composite"
  steps:
    - name: Download .zip
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          const fs = require('fs');
          const path = require('path');
            
          // Get environment variables
          const DROPBOX_APP_KEY = process.env.DROPBOX_APP_KEY;
          const DROPBOX_APP_SECRET = process.env.DROPBOX_APP_SECRET;
          const DROPBOX_REFRESH_TOKEN = process.env.DROPBOX_REFRESH_TOKEN;
          const SOURCE_PATH = process.env.SOURCE_PATH;
          const DEST_PATH = process.env.DEST_PATH;
            
          // Get Dropbox access token
          const accessTokenResponse = execSync(`curl -s https://api.dropbox.com/oauth2/token -d refresh_token=${DROPBOX_REFRESH_TOKEN} -d grant_type=refresh_token -d client_id=${DROPBOX_APP_KEY} -d client_secret=${DROPBOX_APP_SECRET}`).toString();
          const accessToken = JSON.parse(accessTokenResponse).access_token;
            
          // Create the dest directory if it doesn't exist
          const destDir = path.dirname(DEST_PATH);
          if (!fs.existsSync(destDir)) {
            fs.mkdirSync(destDir, { recursive: true });
          }
            
          // Download the file from Dropbox
          execSync(`curl -X POST https://content.dropboxapi.com/2/files/download_zip --header "Authorization: Bearer ${accessToken}" --header "Dropbox-API-Arg: {\\"path\\": \\"${SOURCE_PATH}\\"}" --output ${DEST_PATH}`);
            
          // Check if the download was successful
          if (fs.existsSync(DEST_PATH)) {
              console.log(`File downloaded successfully to ${DEST_PATH}`);
          } else {
              throw new Error('Dropbox download failed');
          }
      env:
        DROPBOX_APP_KEY: ${{ inputs.DROPBOX_APP_KEY }}
        DROPBOX_APP_SECRET: ${{ inputs.DROPBOX_APP_SECRET }}
        DROPBOX_REFRESH_TOKEN: ${{ inputs.DROPBOX_REFRESH_TOKEN }}
        SOURCE_PATH: ${{ inputs.SOURCE_PATH }}
        DEST_PATH: ${{ inputs.DEST_PATH }}
